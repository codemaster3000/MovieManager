<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated 24.05.2016 12:07:27 by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="database.domain.Movie" table="movie" catalog="moviedb" optimistic-lock="version">
        <id name="id" type="int">
            <column name="id" />
            <generator class="assigned" />
        </id>
        <many-to-one name="tmdbinfo" class="database.domain.Tmdbinfo" fetch="select">
            <column name="tmdbInfo_id" />
        </many-to-one>
        <many-to-one name="videoline" class="database.domain.Videoline" fetch="select">
            <column name="videoLine_id" />
        </many-to-one>
        <property name="active" type="java.lang.Byte">
            <column name="active" />
        </property>
        <property name="note" type="string">
            <column name="note" />
        </property>
        <property name="remux" type="java.lang.Boolean">
            <column name="remux" />
        </property>
        <property name="edition" type="string">
            <column name="edition" />
        </property>
        <property name="duration" type="java.lang.Integer">
            <column name="duration" />
        </property>
        <property name="fileName" type="string">
            <column name="fileName" />
        </property>
        <property name="year" type="java.lang.Integer">
            <column name="year" />
        </property>
        <property name="fileSize" type="java.lang.Double">
            <column name="fileSize" precision="22" scale="0" />
        </property>
        <property name="fileFormat" type="string">
            <column name="fileFormat" />
        </property>
        <property name="dateAdded" type="date">
            <column name="dateAdded" length="10" />
        </property>
        <property name="dateModified" type="timestamp">
            <column name="dateModified" length="19" not-null="true" />
        </property>
        <set name="genres" table="genre" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="movieID" />
            </key>
            <one-to-many class="database.domain.Genre" />
        </set>
        <set name="audiolines" table="audioline" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="movie_id" />
            </key>
            <one-to-many class="database.domain.Audioline" />
        </set>
        <set name="owners" table="owner" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="movie_id" />
            </key>
            <one-to-many class="database.domain.Owner" />
        </set>
    </class>
</hibernate-mapping>
